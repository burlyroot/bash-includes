#!/usr/bin/env bash
##
 # String Replace using GNU sed 
 #
 # Author: Dereck Martin <dmartin@burlyroot.com>
 #
 #
 # LICENSE
 #
 # The MIT License (MIT)
 #
 # Copyright (c) 2016 BURLYROOT LLC
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy
 # of this software and associated documentation files (the "Software"), to deal
 # in the Software without restriction, including without limitation the rights
 # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 # copies of the Software, and to permit persons to whom the Software is
 # furnished to do so, subject to the following conditions:
 # 
 # The above copyright notice and this permission notice shall be included in
 # all copies or substantial portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 # THE SOFTWARE.
 ##

##
 # Check to see if sed is available for use
 ##
function __file__is_sed_found() {
  hash sed 2>/dev/null || { 
    ERRNO_MSG="$FUNCNAME(): GNU sed is required"; 
    return 1;
  }

  return 0;
}; __file__is_sed_found

##
 #
 # Find and Replace string in file using GNU sed
 #
 # @param   $1   string   File Path.
 # @param   $2   string   Search string.
 # @param   $3   string   Replace string.
 #
 # @note    This function does no input string validation, better make sure
 #          you regex escapes are in place for / and ".
 ##
function file__str_replace_sed() {

  # check if regular file and writable.
  if [ ! -f "${1}" ] || [ ! -w "${1}" ]; then
    ERRNO_MSG="$FUNCNAME() Requires an existing writable file."
    return 1;
  fi

  # send to sed
  ERRNO_MSG="$FUNCNAME(): $(sed -i -e "s/${2}/${3}/g" "${1}" 2>&1)"

  return $?
}

: <<=cut
=pod

=head1 NAME

  __file__str_replace_sed - BASH helper to replace all occurrences of the 
  search string with the replacement string using GNU sed.

=head1 SYNOPSIS

  Source into BASH script. 
  
  . __file__str_replace_sed

  Provides:
  
    file_str_replace_sed <path> <search> <replace>

=head1 DESCRIPTION

  The above source call adds basic find and replace capability for files using
  GNU sed.

=head2 Code Sample

  #!/usr/bin/env bash

  . __file__str_replace_sed
  file__str_replace_sed "test.txt" "find string" "replace string"

=head1 LICENSE
  
  The MIT License (MIT)
  http://opensource.org/licenses/MIT

=head1 AUTHOR

Dereck Martin <dmartin@burlyroot.com>

=cut
