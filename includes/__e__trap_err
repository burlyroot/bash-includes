#!/usr/bin/env bash
##
 # Trap Error Handler 
 #
 # Author: Dereck Martin <dmartin@burlyroot.com>
 #
 #
 # LICENSE
 #
 # The MIT License (MIT)
 #
 # Copyright (c) 2016 BURLYROOT LLC
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy
 # of this software and associated documentation files (the "Software"), to deal
 # in the Software without restriction, including without limitation the rights
 # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 # copies of the Software, and to permit persons to whom the Software is
 # furnished to do so, subject to the following conditions:
 # 
 # The above copyright notice and this permission notice shall be included in
 # all copies or substantial portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 # THE SOFTWARE.
 ##

##
 # Define Error Trap
 #
 #  @param  $1  String A space delimited string containing:
 #                Function
 #                BUILTIN $LINENO
 #                BUILTIN $?
 #                Message Variable
 #                
 #  @param  $2  Signal
 ##
trap '__e__trap_err ${LINENO} $? "${ERRNO_MSG}"' ERR

##
 # Handle propagation of caught exceptions
 #
 #  @param  $1  int     Line number.
 #  @param  $2  int     Exit code.
 #  @param  $3  int     Message (optional).
 ##
function __e__trap_err() {
  echo "[ERROR] Line: ${1} Code: ${2} Message: ${3}"
  exit 1
}

: <<=cut
=pod

=head1 NAME

  __e__trap_err - BASH helper for trapping return errors

=head1 SYNOPSIS

  Source into BASH script. 
  
  . __e__trap_err

=head1 DESCRIPTION

  The above source call adds exception handling into a BASH script.

=head2 Requirements

  BASH Version >= 2.05a

  To produce additional messages, functions should set $ERRNO_MSG on return of
  non-zero status codes. This include was designed for BASH.

=head2 Code Sample

  #!/usr/bin/env bash

  . __e__trap_err

  function example() {
    if [ -n "$1" ]; then
      return 0
    fi

    ERRNO_MSG="$FUNCNAME() requires a single argument"
    return 1
  }

  example 1
  example

=head3 Output Sample

  [ERROR] Line: 15 Code: 1 Message: example() requires a single argument

=head1 LICENSE
  
  The MIT License (MIT)
  http://opensource.org/licenses/MIT

=head1 AUTHOR

Dereck Martin <dmartin@burlyroot.com>

=cut
